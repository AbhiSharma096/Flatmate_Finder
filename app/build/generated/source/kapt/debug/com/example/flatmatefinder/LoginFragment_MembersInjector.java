// Generated by Dagger (https://dagger.dev).
package com.example.flatmatefinder;

import com.example.flatmatefinder.Utils.TokenManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class LoginFragment_MembersInjector implements MembersInjector<LoginFragment> {
  private final Provider<TokenManager> tokenManagerProvider;

  public LoginFragment_MembersInjector(Provider<TokenManager> tokenManagerProvider) {
    this.tokenManagerProvider = tokenManagerProvider;
  }

  public static MembersInjector<LoginFragment> create(Provider<TokenManager> tokenManagerProvider) {
    return new LoginFragment_MembersInjector(tokenManagerProvider);
  }

  @Override
  public void injectMembers(LoginFragment instance) {
    injectTokenManager(instance, tokenManagerProvider.get());
  }

  @InjectedFieldSignature("com.example.flatmatefinder.LoginFragment.tokenManager")
  public static void injectTokenManager(LoginFragment instance, TokenManager tokenManager) {
    instance.tokenManager = tokenManager;
  }
}
